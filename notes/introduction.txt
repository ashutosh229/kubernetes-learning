history:
-2000s: google system crashes
-2014: google launched borg which could auto heal the applications, scale them, distribute the load, etc
-2014: borg was made open source and then turned into "kubernetes", also called "k8s"
-present: kubernetes is used for the orchestration of docker containers 

orchestration tool:
-handling and managing the docker containers in an environment which allows them to communicate with eact other, heal them, 
auto scale, load distribution, etc. 

need of orchestration:
-we slowly move from monolith from microservice in order to have advantages 
-for managing a microservice architecture, we will have to manage all the applications and services in it 
-managing all the services in the architecture, which are in the form of docker containers, will require some orchestration tool 

some terms:
-node = single server/computer/machine
-cluster = multiple nodes or a group of machines or computers
-slave node = dependent node, which is run by some other node 
-master node = independent node, which is responsible for running the other nodes 
-pod: inside a slave node, there are a lot of docker containers running and the group of these containers is called pod

components of master node:
-API Server: communication gateway, keeping care of the communication happening between the slave nodes and the master 
-Scheduler: schedules the docker containers according to the need of the system
-etcd: a database containing the information about everything related to the docker containers and everything else 
which is present on the kubernetes
-Controller Manager: Sees whether everything is going on fine or what 

components of slave node:
-kubelet: manages the containers running in the node and other services, at the slave node level 
-service proxy: the docker containers are isolated from the outside world and we cant access them as a user directly, when we 
need to access them as an outside user, we use a service called service proxy

communication between the nodes:
-we already know about the components of both the type of nodes and also that they communicate via API server 
-but on which network do they communicate?
-they communicate on a network called CNI Network i.e. Container Network Interface Network 
-examples of such network includes Calico, Weave Net

overall control of the system:
-since API server takes care of the control for the entire system, we also need someone to direct 
the API server so that we can control the entire system from the top 
-this work is done by the kubectl i.e. kube controller, which controls the entire system 
-this entire system containing the master node, slave nodes cluster, kubectl, user, is called the whole kubernetes cluster

making the kubernetes cluster:
-there are a lot of ways of doing so
kubeadm
minikube(local) 
kind cluster(docker method)
eks/aks/gke(cloud method) 
-but we will be making the KIND cluster 
-kubernetes in docker 
-for this we have to install:
    -docker, via which we will be running the kubernetes
    -kind, via which is the kit in which kubernetes is present



















