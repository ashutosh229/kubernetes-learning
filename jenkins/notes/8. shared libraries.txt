designing the pipeline is a tough task and therefore we have to put the reusable code into libraries 
from those libraries/codebases/repositories, we can use the .groovy file in which the groovy code is written for the 
pipeline 

for making a shared library:
make a repo on github
make vars folder in it 
make a .groovy file in it 
inside the file, make a function in which the step is written 

for connecting the library to the jenkins:
go to jenkins dashboard 
go to manage jenkins 
go to system 
go to the option of global trusted pipeline libraries
there click on the add library option 
give the name of the library as anything which you want 
in the default version, enter the branch of the repo in which the code is 
in the retrieval method, enter the modern scm 
in source code management enter git 
in project repository, enter the code to your repo 
if the repo is public, then no need to add the credentials 
if the repo is private, then add the credentials 

we have connected the library to the jenkins but now we have to connect it to the pipeline 

connecting the library to the pipeline:
in the very beginning of the pipeline, even above the pipeline component, add the code:
@Library("<name of the library>") _

using the code into the pipeline:
@Library("<name of the library>") _
pipeline{
    agent {label "vinod"}
    stages{
        stage{
            steps{
                script{
                    hello()
                }
            }
        }
    }
}
